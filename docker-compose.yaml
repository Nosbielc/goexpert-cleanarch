version: '3.8'

services:
  mysql:
    image: mysql:5.7
    platform: linux/amd64
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - cleanarch-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      timeout: 20s
      retries: 10

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - cleanarch-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  migrate:
    image: migrate/migrate
    platform: linux/amd64
    container_name: migrate
    restart: "no"
    networks:
      - cleanarch-network
    volumes:
      - ./sql/migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "mysql://root:root@tcp(mysql:3306)/orders",
      "up"
    ]
    depends_on:
      mysql:
        condition: service_healthy

  app:
    build: .
    container_name: cleanarch-app
    restart: unless-stopped
    ports:
      - "8000:8000"   # REST API
      - "8080:8080"   # GraphQL
      - "50051:50051" # gRPC
    environment:
      DB_DRIVER: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: orders
      WEB_SERVER_PORT: 8000
      GRPC_SERVER_PORT: 50051
      GRAPHQL_SERVER_PORT: 8080
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    networks:
      - cleanarch-network

volumes:
  mysql_data:

networks:
  cleanarch-network:
    driver: bridge
